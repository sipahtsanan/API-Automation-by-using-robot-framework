<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210403 22:03:17.890" generator="Robot 3.1.2 (Python 2.7.18 on darwin)">
<suite source="/Users/thipparatmayachiew/PycharmProjects/Exam_API/testcases/TestExam.robot" id="s1" name="TestExam">
<test id="s1-t1" name="TC_O001">
<kw name="Given Prepare Json Request" library="common_keywords">
<arguments>
<arg>${create_newUser_requestBody}</arg>
</arguments>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${template}</arg>
</arguments>
<assign>
<var>${request}</var>
</assign>
<msg timestamp="20210403 22:03:18.387" level="INFO">${request} = {u'name': u'Test CreateNewUser', u'gender': u'Female', u'email': u'test.create_data2@15ce.com', u'status': u'Active'}</msg>
<status status="PASS" endtime="20210403 22:03:18.387" starttime="20210403 22:03:18.386"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${request}</arg>
<arg>${request}</arg>
</arguments>
<msg timestamp="20210403 22:03:18.387" level="INFO">${request} = {u'name': u'Test CreateNewUser', u'gender': u'Female', u'email': u'test.create_data2@15ce.com', u'status': u'Active'}</msg>
<status status="PASS" endtime="20210403 22:03:18.387" starttime="20210403 22:03:18.387"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:18.388" starttime="20210403 22:03:18.385"></status>
</kw>
<kw name="Then Prepare New user data Info" library="create-new-user">
<kw name="Get Rand Letters and Numbers" library="common_keywords">
<arguments>
<arg>3</arg>
</arguments>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>${length}</arg>
<arg>[LETTERS][NUMBERS]</arg>
</arguments>
<assign>
<var>${rand_str}</var>
</assign>
<msg timestamp="20210403 22:03:18.389" level="INFO">${rand_str} = oA0</msg>
<status status="PASS" endtime="20210403 22:03:18.389" starttime="20210403 22:03:18.389"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${rand_str}</arg>
<arg>${rand_str}</arg>
</arguments>
<msg timestamp="20210403 22:03:18.390" level="INFO">${rand_str} = oA0</msg>
<status status="PASS" endtime="20210403 22:03:18.390" starttime="20210403 22:03:18.389"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:18.390" starttime="20210403 22:03:18.388"></status>
</kw>
<kw name="Update 'name' Is 'CreateNewUser ${rand_str}' For Request" library="common_keywords">
<kw name="Update Value To Json" library="JSONLibrary">
<doc>Update value to JSON using JSONPath</doc>
<arguments>
<arg>${request}</arg>
<arg>$..${field}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${request}</var>
</assign>
<msg timestamp="20210403 22:03:18.433" level="INFO">${request} = {u'name': u'CreateNewUser oA0', u'gender': u'Female', u'email': u'test.create_data2@15ce.com', u'status': u'Active'}</msg>
<status status="PASS" endtime="20210403 22:03:18.434" starttime="20210403 22:03:18.391"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${request}</arg>
</arguments>
<msg timestamp="20210403 22:03:18.434" level="INFO">${request} = {u'name': u'CreateNewUser oA0', u'gender': u'Female', u'email': u'test.create_data2@15ce.com', u'status': u'Active'}</msg>
<status status="PASS" endtime="20210403 22:03:18.434" starttime="20210403 22:03:18.434"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:18.434" starttime="20210403 22:03:18.390"></status>
</kw>
<kw name="Get Rand Letters and Numbers" library="common_keywords">
<arguments>
<arg>3</arg>
</arguments>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>${length}</arg>
<arg>[LETTERS][NUMBERS]</arg>
</arguments>
<assign>
<var>${rand_str}</var>
</assign>
<msg timestamp="20210403 22:03:18.435" level="INFO">${rand_str} = 5la</msg>
<status status="PASS" endtime="20210403 22:03:18.435" starttime="20210403 22:03:18.435"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${rand_str}</arg>
<arg>${rand_str}</arg>
</arguments>
<msg timestamp="20210403 22:03:18.436" level="INFO">${rand_str} = 5la</msg>
<status status="PASS" endtime="20210403 22:03:18.436" starttime="20210403 22:03:18.436"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:18.436" starttime="20210403 22:03:18.435"></status>
</kw>
<kw name="Update 'email' Is 'test.create_data${rand_str}@15ce.com' For Request" library="common_keywords">
<kw name="Update Value To Json" library="JSONLibrary">
<doc>Update value to JSON using JSONPath</doc>
<arguments>
<arg>${request}</arg>
<arg>$..${field}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${request}</var>
</assign>
<msg timestamp="20210403 22:03:18.470" level="INFO">${request} = {u'name': u'CreateNewUser oA0', u'gender': u'Female', u'email': u'test.create_data5la@15ce.com', u'status': u'Active'}</msg>
<status status="PASS" endtime="20210403 22:03:18.470" starttime="20210403 22:03:18.437"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${request}</arg>
</arguments>
<msg timestamp="20210403 22:03:18.471" level="INFO">${request} = {u'name': u'CreateNewUser oA0', u'gender': u'Female', u'email': u'test.create_data5la@15ce.com', u'status': u'Active'}</msg>
<status status="PASS" endtime="20210403 22:03:18.471" starttime="20210403 22:03:18.470"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:18.471" starttime="20210403 22:03:18.436"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:18.471" starttime="20210403 22:03:18.388"></status>
</kw>
<kw name="When Call Create a new user With JSON Body" library="create-new-user">
<arguments>
<arg>${request}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>post_create_new_user</arg>
<arg>${exam_url}</arg>
<arg>disable_warnings=${1}</arg>
</arguments>
<msg timestamp="20210403 22:03:18.473" level="INFO">Creating Session using : alias=post_create_new_user, url=https://gorest.co.in/public-api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210403 22:03:18.473" starttime="20210403 22:03:18.472"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Bearer ${token}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20210403 22:03:18.474" level="INFO">&amp;{headers} = { Content-Type=application/json | Authorization=Bearer 665fd15c1722a9f7732368773d29bcc20fa78f5c4e0a27eb9d3037f56ad5ce76 }</msg>
<status status="PASS" endtime="20210403 22:03:18.474" starttime="20210403 22:03:18.473"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<arguments>
<arg>post_create_new_user</arg>
<arg>${uri}</arg>
<arg>data=${jsonbody}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210403 22:03:18.474" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20210403 22:03:18.670" level="INFO">POST Request : url=https://gorest.co.in/public-api/users 
 path_url=/public-api/users 
 headers={'Content-Length': '110', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.25.1', 'Connection': 'keep-alive', 'Content-Type': u'application/json', 'Authorization': u'Bearer 665fd15c1722a9f7732368773d29bcc20fa78f5c4e0a27eb9d3037f56ad5ce76'} 
 body={"name": "CreateNewUser oA0", "gender": "Female", "email": "test.create_data5la@15ce.com", "status": "Active"} 
 </msg>
<msg timestamp="20210403 22:03:18.670" level="INFO">POST Response : url=https://gorest.co.in/public-api/users 
 status=200, reason=OK 
 headers={'Expect-CT': 'enforce; max-age=3600', 'X-Request-Id': 'b95a7c0d-d21d-4774-88f3-784fee35937f', 'X-XSS-Protection': '1; mode=block', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip', 'Transfer-Encoding': 'chunked', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains', 'Vary': 'Accept-Encoding, Origin', 'X-Runtime': '0.009496', 'Server': 'nginx', 'Connection': 'keep-alive', 'ETag': 'W/"943b319d8fa8a14294b3c38884db59f2"', 'X-Permitted-Cross-Domain-Policies': 'none', 'Cache-Control': 'max-age=0, private, must-revalidate', 'Date': 'Sat, 03 Apr 2021 15:03:18 GMT', 'X-Frame-Options': 'SAMEORIGIN, sameorigin', 'Referrer-Policy': 'strict-origin-when-cross-origin', 'Content-Type': 'application/json; charset=utf-8', 'Location': 'https://gorest.co.in/public-api/users/1597'} 
 body={"code":201,"meta":null,"data":{"id":1597,"name":"CreateNewUser oA0","email":"test.create_data5la@15ce.com","gender":"Female","status":"Active","created_at":"2021-04-03T20:33:18.762+05:30","updated_at":"2021-04-03T20:33:18.762+05:30"}} 
 </msg>
<msg timestamp="20210403 22:03:18.670" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210403 22:03:18.671" starttime="20210403 22:03:18.474"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resp.status_code} == 200</arg>
<arg>Set Global Variable</arg>
<arg>${json_resp}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${json_resp}</arg>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20210403 22:03:18.675" level="INFO">${json_resp} = {u'data': {u'status': u'Active', u'name': u'CreateNewUser oA0', u'gender': u'Female', u'created_at': u'2021-04-03T20:33:18.762+05:30', u'updated_at': u'2021-04-03T20:33:18.762+05:30', u'id': 1597, u'e...</msg>
<status status="PASS" endtime="20210403 22:03:18.675" starttime="20210403 22:03:18.673"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:18.676" starttime="20210403 22:03:18.671"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20210403 22:03:18.678" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210403 22:03:18.678" starttime="20210403 22:03:18.676"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_resp}</arg>
<arg>$..id</arg>
</arguments>
<assign>
<var>${userInfo['id']}</var>
</assign>
<msg timestamp="20210403 22:03:18.712" level="INFO">${userInfo['id']} = [1597]</msg>
<status status="PASS" endtime="20210403 22:03:18.712" starttime="20210403 22:03:18.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${userInfo['id']}</arg>
</arguments>
<msg timestamp="20210403 22:03:18.713" level="INFO">[1597]</msg>
<status status="PASS" endtime="20210403 22:03:18.713" starttime="20210403 22:03:18.713"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${userInfo['id']}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20210403 22:03:18.714" level="INFO">${id} = 1597</msg>
<status status="PASS" endtime="20210403 22:03:18.714" starttime="20210403 22:03:18.713"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${user_id}</arg>
<arg>${id}</arg>
</arguments>
<msg timestamp="20210403 22:03:18.715" level="INFO">${user_id} = 1597</msg>
<status status="PASS" endtime="20210403 22:03:18.715" starttime="20210403 22:03:18.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${user_id}</arg>
</arguments>
<msg timestamp="20210403 22:03:18.715" level="INFO">1597</msg>
<status status="PASS" endtime="20210403 22:03:18.716" starttime="20210403 22:03:18.715"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_resp}</arg>
<arg>$..email</arg>
</arguments>
<assign>
<var>${userInfo['email']}</var>
</assign>
<msg timestamp="20210403 22:03:18.765" level="INFO">${userInfo['email']} = [u'test.create_data5la@15ce.com']</msg>
<status status="PASS" endtime="20210403 22:03:18.765" starttime="20210403 22:03:18.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${userInfo['email']}</arg>
</arguments>
<msg timestamp="20210403 22:03:18.766" level="INFO">[u'test.create_data5la@15ce.com']</msg>
<status status="PASS" endtime="20210403 22:03:18.766" starttime="20210403 22:03:18.766"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${userInfo['email']}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20210403 22:03:18.766" level="INFO">${email} = test.create_data5la@15ce.com</msg>
<status status="PASS" endtime="20210403 22:03:18.767" starttime="20210403 22:03:18.766"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${user_email}</arg>
<arg>${email}</arg>
</arguments>
<msg timestamp="20210403 22:03:18.768" level="INFO">${user_email} = test.create_data5la@15ce.com</msg>
<status status="PASS" endtime="20210403 22:03:18.768" starttime="20210403 22:03:18.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${user_email}</arg>
</arguments>
<msg timestamp="20210403 22:03:18.768" level="INFO">test.create_data5la@15ce.com</msg>
<status status="PASS" endtime="20210403 22:03:18.769" starttime="20210403 22:03:18.768"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_resp}</arg>
<arg>$..name</arg>
</arguments>
<assign>
<var>${userInfo['name']}</var>
</assign>
<msg timestamp="20210403 22:03:18.802" level="INFO">${userInfo['name']} = [u'CreateNewUser oA0']</msg>
<status status="PASS" endtime="20210403 22:03:18.802" starttime="20210403 22:03:18.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${userInfo['name']}</arg>
</arguments>
<msg timestamp="20210403 22:03:18.803" level="INFO">[u'CreateNewUser oA0']</msg>
<status status="PASS" endtime="20210403 22:03:18.803" starttime="20210403 22:03:18.802"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${userInfo['name']}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20210403 22:03:18.803" level="INFO">${name} = CreateNewUser oA0</msg>
<status status="PASS" endtime="20210403 22:03:18.804" starttime="20210403 22:03:18.803"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${user_name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20210403 22:03:18.805" level="INFO">${user_name} = CreateNewUser oA0</msg>
<status status="PASS" endtime="20210403 22:03:18.805" starttime="20210403 22:03:18.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${user_name}</arg>
</arguments>
<msg timestamp="20210403 22:03:18.806" level="INFO">CreateNewUser oA0</msg>
<status status="PASS" endtime="20210403 22:03:18.806" starttime="20210403 22:03:18.806"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:18.806" starttime="20210403 22:03:18.472"></status>
</kw>
<kw name="Then Http Response Should Be '200'" library="common_keywords">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20210403 22:03:18.807" level="INFO">${status} = 200</msg>
<status status="PASS" endtime="20210403 22:03:18.807" starttime="20210403 22:03:18.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
</arguments>
<msg timestamp="20210403 22:03:18.808" level="INFO">{"code":201,"meta":null,"data":{"id":1597,"name":"CreateNewUser oA0","email":"test.create_data5la@15ce.com","gender":"Female","status":"Active","created_at":"2021-04-03T20:33:18.762+05:30","updated_at":"2021-04-03T20:33:18.762+05:30"}}</msg>
<status status="PASS" endtime="20210403 22:03:18.808" starttime="20210403 22:03:18.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${status}</arg>
<arg>${http_status}</arg>
</arguments>
<msg timestamp="20210403 22:03:18.809" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210403 22:03:18.809" starttime="20210403 22:03:18.808"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:18.809" starttime="20210403 22:03:18.807"></status>
</kw>
<kw name="And Verify create a new user is successfully" library="create-new-user">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>get_search_user</arg>
<arg>${exam_url}</arg>
<arg>disable_warnings=${1}</arg>
</arguments>
<msg timestamp="20210403 22:03:18.810" level="INFO">Creating Session using : alias=get_search_user, url=https://gorest.co.in/public-api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210403 22:03:18.810" starttime="20210403 22:03:18.810"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Bearer ${token}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20210403 22:03:18.811" level="INFO">&amp;{headers} = { Content-Type=application/json | Authorization=Bearer 665fd15c1722a9f7732368773d29bcc20fa78f5c4e0a27eb9d3037f56ad5ce76 }</msg>
<status status="PASS" endtime="20210403 22:03:18.811" starttime="20210403 22:03:18.811"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>*DEPRECATED* Please use `GET On Session` instead.</doc>
<arguments>
<arg>get_search_user</arg>
<arg>${uri}/${user_id}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210403 22:03:18.812" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20210403 22:03:19.011" level="INFO">GET Request : url=https://gorest.co.in/public-api/users/1597 
 path_url=/public-api/users/1597 
 headers={'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.25.1', 'Connection': 'keep-alive', 'Content-Type': u'application/json', 'Authorization': u'Bearer 665fd15c1722a9f7732368773d29bcc20fa78f5c4e0a27eb9d3037f56ad5ce76'} 
 body=None 
 </msg>
<msg timestamp="20210403 22:03:19.011" level="INFO">GET Response : url=https://gorest.co.in/public-api/users/1597 
 status=200, reason=OK 
 headers={'Expect-CT': 'enforce; max-age=3600', 'X-Request-Id': '5d7b59cc-9f16-4955-a4ac-05a5d1a0ab29', 'X-XSS-Protection': '1; mode=block', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip', 'Transfer-Encoding': 'chunked', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains', 'Vary': 'Accept-Encoding, Origin', 'X-Runtime': '0.023739', 'Server': 'nginx', 'Connection': 'keep-alive', 'ETag': 'W/"156925b18dfa0d60b5fb1cb3b352f959"', 'X-Permitted-Cross-Domain-Policies': 'none', 'Cache-Control': 'max-age=0, private, must-revalidate', 'Date': 'Sat, 03 Apr 2021 15:03:19 GMT', 'X-Frame-Options': 'SAMEORIGIN, sameorigin', 'Referrer-Policy': 'strict-origin-when-cross-origin', 'Content-Type': 'application/json; charset=utf-8'} 
 body={"code":200,"meta":null,"data":{"id":1597,"name":"CreateNewUser oA0","email":"test.create_data5la@15ce.com","gender":"Female","status":"Active","created_at":"2021-04-03T20:33:18.762+05:30","updated_at":"2021-04-03T20:33:18.762+05:30"}} 
 </msg>
<msg timestamp="20210403 22:03:19.011" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210403 22:03:19.011" starttime="20210403 22:03:18.812"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.013" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210403 22:03:19.013" starttime="20210403 22:03:19.012"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:19.013" starttime="20210403 22:03:18.809"></status>
</kw>
<kw name="And Response Field 'email' Should Be Equal '${user_email}'" library="common_keywords">
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${response.text}</arg>
</arguments>
<assign>
<var>${response.json}</var>
</assign>
<msg timestamp="20210403 22:03:19.015" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210403 22:03:19.016" level="INFO">To JSON using : content={"code":200,"meta":null,"data":{"id":1597,"name":"CreateNewUser oA0","email":"test.create_data5la@15ce.com","gender":"Female","status":"Active","created_at":"2021-04-03T20:33:18.762+05:30","updated_at":"2021-04-03T20:33:18.762+05:30"}} </msg>
<msg timestamp="20210403 22:03:19.016" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20210403 22:03:19.016" level="INFO">${response.json} = {u'data': {u'status': u'Active', u'name': u'CreateNewUser oA0', u'gender': u'Female', u'created_at': u'2021-04-03T20:33:18.762+05:30', u'updated_at': u'2021-04-03T20:33:18.762+05:30', u'id': 1597, u'e...</msg>
<status status="PASS" endtime="20210403 22:03:19.016" starttime="20210403 22:03:19.015"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json}</arg>
<arg>$..${json_path}</arg>
</arguments>
<assign>
<var>${actual}</var>
</assign>
<msg timestamp="20210403 22:03:19.055" level="INFO">${actual} = [u'test.create_data5la@15ce.com']</msg>
<status status="PASS" endtime="20210403 22:03:19.055" starttime="20210403 22:03:19.017"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual[0]}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20210403 22:03:19.056" starttime="20210403 22:03:19.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual[0]}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.057" level="INFO">test.create_data5la@15ce.com</msg>
<status status="PASS" endtime="20210403 22:03:19.057" starttime="20210403 22:03:19.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.057" level="INFO">test.create_data5la@15ce.com</msg>
<status status="PASS" endtime="20210403 22:03:19.057" starttime="20210403 22:03:19.057"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:19.058" starttime="20210403 22:03:19.014"></status>
</kw>
<kw name="Prepare JSON file for Updating request data" library="update-user">
<assign>
<var>${startRename_user}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Rename the user succeed</arg>
</arguments>
<assign>
<var>&amp;{Rename_user}</var>
</assign>
<msg timestamp="20210403 22:03:19.059" level="INFO">&amp;{Rename_user} = { name=Rename the user succeed }</msg>
<status status="PASS" endtime="20210403 22:03:19.059" starttime="20210403 22:03:19.058"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${Rename_user}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210403 22:03:19.059" starttime="20210403 22:03:19.059"></status>
</kw>
<msg timestamp="20210403 22:03:19.060" level="INFO">${startRename_user} = {u'name': u'Rename the user succeed'}</msg>
<status status="PASS" endtime="20210403 22:03:19.060" starttime="20210403 22:03:19.058"></status>
</kw>
<kw name="Then Calling Rename user API" library="update-user">
<arguments>
<arg>${user_id}</arg>
<arg>${startRename_user}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>PUT_rename_user</arg>
<arg>${exam_url}</arg>
<arg>disable_warnings=${1}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.061" level="INFO">Creating Session using : alias=PUT_rename_user, url=https://gorest.co.in/public-api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210403 22:03:19.061" starttime="20210403 22:03:19.061"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Bearer ${token}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20210403 22:03:19.062" level="INFO">&amp;{headers} = { Content-Type=application/json | Authorization=Bearer 665fd15c1722a9f7732368773d29bcc20fa78f5c4e0a27eb9d3037f56ad5ce76 }</msg>
<status status="PASS" endtime="20210403 22:03:19.062" starttime="20210403 22:03:19.062"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>*DEPRECATED* Please use `PUT On Session` instead.</doc>
<arguments>
<arg>PUT_rename_user</arg>
<arg>${uri}/${userId}</arg>
<arg>data=${data_post}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210403 22:03:19.063" level="WARN">Keyword 'RequestsLibrary.Put Request' is deprecated. Please use `PUT On Session` instead.</msg>
<msg timestamp="20210403 22:03:19.265" level="INFO">PUT Request : url=https://gorest.co.in/public-api/users/1597 
 path_url=/public-api/users/1597 
 headers={'Content-Length': '35', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.25.1', 'Connection': 'keep-alive', 'Content-Type': u'application/json', 'Authorization': u'Bearer 665fd15c1722a9f7732368773d29bcc20fa78f5c4e0a27eb9d3037f56ad5ce76'} 
 body={"name": "Rename the user succeed"} 
 </msg>
<msg timestamp="20210403 22:03:19.265" level="INFO">PUT Response : url=https://gorest.co.in/public-api/users/1597 
 status=200, reason=OK 
 headers={'Expect-CT': 'enforce; max-age=3600', 'X-Request-Id': 'a87a7f27-7216-4c07-87d9-9c8159bf6463', 'X-XSS-Protection': '1; mode=block', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip', 'Transfer-Encoding': 'chunked', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains', 'Vary': 'Accept-Encoding, Origin', 'X-Runtime': '0.020526', 'Server': 'nginx', 'Connection': 'keep-alive', 'ETag': 'W/"835a142c5b8fc84f48f7e9f133bc7329"', 'X-Permitted-Cross-Domain-Policies': 'none', 'Cache-Control': 'max-age=0, private, must-revalidate', 'Date': 'Sat, 03 Apr 2021 15:03:19 GMT', 'X-Frame-Options': 'SAMEORIGIN, sameorigin', 'Referrer-Policy': 'strict-origin-when-cross-origin', 'Content-Type': 'application/json; charset=utf-8'} 
 body={"code":200,"meta":null,"data":{"id":1597,"name":"Rename the user succeed","email":"test.create_data5la@15ce.com","gender":"Female","status":"Active","created_at":"2021-04-03T20:33:18.762+05:30","updated_at":"2021-04-03T20:33:19.357+05:30"}} 
 </msg>
<msg timestamp="20210403 22:03:19.265" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210403 22:03:19.265" starttime="20210403 22:03:19.062"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resp.status_code} == 200</arg>
<arg>Set Test Variable</arg>
<arg>${json_resp}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${json_resp}</arg>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.267" level="INFO">${json_resp} = {u'data': {u'status': u'Active', u'name': u'Rename the user succeed', u'gender': u'Female', u'created_at': u'2021-04-03T20:33:18.762+05:30', u'updated_at': u'2021-04-03T20:33:19.357+05:30', u'id': 159...</msg>
<status status="PASS" endtime="20210403 22:03:19.267" starttime="20210403 22:03:19.266"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:19.267" starttime="20210403 22:03:19.265"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.267" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210403 22:03:19.267" starttime="20210403 22:03:19.267"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:19.268" starttime="20210403 22:03:19.060"></status>
</kw>
<kw name="And Http Response Should Be '200'" library="common_keywords">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20210403 22:03:19.269" level="INFO">${status} = 200</msg>
<status status="PASS" endtime="20210403 22:03:19.269" starttime="20210403 22:03:19.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.270" level="INFO">{"code":200,"meta":null,"data":{"id":1597,"name":"Rename the user succeed","email":"test.create_data5la@15ce.com","gender":"Female","status":"Active","created_at":"2021-04-03T20:33:18.762+05:30","updated_at":"2021-04-03T20:33:19.357+05:30"}}</msg>
<status status="PASS" endtime="20210403 22:03:19.270" starttime="20210403 22:03:19.269"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${status}</arg>
<arg>${http_status}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.270" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210403 22:03:19.270" starttime="20210403 22:03:19.270"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:19.271" starttime="20210403 22:03:19.268"></status>
</kw>
<kw name="And Response Field 'email' Should Be Equal '${user_email}'" library="common_keywords">
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${response.text}</arg>
</arguments>
<assign>
<var>${response.json}</var>
</assign>
<msg timestamp="20210403 22:03:19.272" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210403 22:03:19.272" level="INFO">To JSON using : content={"code":200,"meta":null,"data":{"id":1597,"name":"Rename the user succeed","email":"test.create_data5la@15ce.com","gender":"Female","status":"Active","created_at":"2021-04-03T20:33:18.762+05:30","updated_at":"2021-04-03T20:33:19.357+05:30"}} </msg>
<msg timestamp="20210403 22:03:19.273" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20210403 22:03:19.273" level="INFO">${response.json} = {u'data': {u'status': u'Active', u'name': u'Rename the user succeed', u'gender': u'Female', u'created_at': u'2021-04-03T20:33:18.762+05:30', u'updated_at': u'2021-04-03T20:33:19.357+05:30', u'id': 159...</msg>
<status status="PASS" endtime="20210403 22:03:19.273" starttime="20210403 22:03:19.272"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json}</arg>
<arg>$..${json_path}</arg>
</arguments>
<assign>
<var>${actual}</var>
</assign>
<msg timestamp="20210403 22:03:19.311" level="INFO">${actual} = [u'test.create_data5la@15ce.com']</msg>
<status status="PASS" endtime="20210403 22:03:19.312" starttime="20210403 22:03:19.273"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual[0]}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20210403 22:03:19.312" starttime="20210403 22:03:19.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual[0]}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.313" level="INFO">test.create_data5la@15ce.com</msg>
<status status="PASS" endtime="20210403 22:03:19.313" starttime="20210403 22:03:19.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.313" level="INFO">test.create_data5la@15ce.com</msg>
<status status="PASS" endtime="20210403 22:03:19.313" starttime="20210403 22:03:19.313"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:19.314" starttime="20210403 22:03:19.271"></status>
</kw>
<kw name="And Response Field 'id' Should Be Equal '${user_id}'" library="common_keywords">
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${response.text}</arg>
</arguments>
<assign>
<var>${response.json}</var>
</assign>
<msg timestamp="20210403 22:03:19.315" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210403 22:03:19.315" level="INFO">To JSON using : content={"code":200,"meta":null,"data":{"id":1597,"name":"Rename the user succeed","email":"test.create_data5la@15ce.com","gender":"Female","status":"Active","created_at":"2021-04-03T20:33:18.762+05:30","updated_at":"2021-04-03T20:33:19.357+05:30"}} </msg>
<msg timestamp="20210403 22:03:19.315" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20210403 22:03:19.315" level="INFO">${response.json} = {u'data': {u'status': u'Active', u'name': u'Rename the user succeed', u'gender': u'Female', u'created_at': u'2021-04-03T20:33:18.762+05:30', u'updated_at': u'2021-04-03T20:33:19.357+05:30', u'id': 159...</msg>
<status status="PASS" endtime="20210403 22:03:19.315" starttime="20210403 22:03:19.315"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json}</arg>
<arg>$..${json_path}</arg>
</arguments>
<assign>
<var>${actual}</var>
</assign>
<msg timestamp="20210403 22:03:19.360" level="INFO">${actual} = [1597]</msg>
<status status="PASS" endtime="20210403 22:03:19.360" starttime="20210403 22:03:19.316"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual[0]}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20210403 22:03:19.361" starttime="20210403 22:03:19.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual[0]}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.362" level="INFO">1597</msg>
<status status="PASS" endtime="20210403 22:03:19.362" starttime="20210403 22:03:19.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.363" level="INFO">1597</msg>
<status status="PASS" endtime="20210403 22:03:19.363" starttime="20210403 22:03:19.362"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:19.363" starttime="20210403 22:03:19.314"></status>
</kw>
<kw name="And Response Field 'name' Should Not Be Equal '${user_name}'" library="common_keywords">
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${response.text}</arg>
</arguments>
<assign>
<var>${response.json}</var>
</assign>
<msg timestamp="20210403 22:03:19.364" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210403 22:03:19.365" level="INFO">To JSON using : content={"code":200,"meta":null,"data":{"id":1597,"name":"Rename the user succeed","email":"test.create_data5la@15ce.com","gender":"Female","status":"Active","created_at":"2021-04-03T20:33:18.762+05:30","updated_at":"2021-04-03T20:33:19.357+05:30"}} </msg>
<msg timestamp="20210403 22:03:19.366" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20210403 22:03:19.366" level="INFO">${response.json} = {u'data': {u'status': u'Active', u'name': u'Rename the user succeed', u'gender': u'Female', u'created_at': u'2021-04-03T20:33:18.762+05:30', u'updated_at': u'2021-04-03T20:33:19.357+05:30', u'id': 159...</msg>
<status status="PASS" endtime="20210403 22:03:19.366" starttime="20210403 22:03:19.364"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json}</arg>
<arg>$..${json_path}</arg>
</arguments>
<assign>
<var>${actual}</var>
</assign>
<msg timestamp="20210403 22:03:19.410" level="INFO">${actual} = [u'Rename the user succeed']</msg>
<status status="PASS" endtime="20210403 22:03:19.410" starttime="20210403 22:03:19.366"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${actual[0]}</arg>
<arg>${value}</arg>
</arguments>
<status status="PASS" endtime="20210403 22:03:19.412" starttime="20210403 22:03:19.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual[0]}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.412" level="INFO">Rename the user succeed</msg>
<status status="PASS" endtime="20210403 22:03:19.412" starttime="20210403 22:03:19.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.413" level="INFO">CreateNewUser oA0</msg>
<status status="PASS" endtime="20210403 22:03:19.413" starttime="20210403 22:03:19.413"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:19.413" starttime="20210403 22:03:19.363"></status>
</kw>
<kw name="Then Call Create post With JSON Body" library="create-post-with-comment">
<arguments>
<arg>${user_id}</arg>
<arg>${create_post}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>post_create_post</arg>
<arg>${exam_url}</arg>
<arg>disable_warnings=${1}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.414" level="INFO">Creating Session using : alias=post_create_post, url=https://gorest.co.in/public-api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210403 22:03:19.415" starttime="20210403 22:03:19.414"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Bearer ${token}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20210403 22:03:19.416" level="INFO">&amp;{headers} = { Content-Type=application/json | Authorization=Bearer 665fd15c1722a9f7732368773d29bcc20fa78f5c4e0a27eb9d3037f56ad5ce76 }</msg>
<status status="PASS" endtime="20210403 22:03:19.416" starttime="20210403 22:03:19.415"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<arguments>
<arg>post_create_post</arg>
<arg>${uri}/${userId}/posts</arg>
<arg>data=${jsonbody}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210403 22:03:19.416" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20210403 22:03:19.611" level="INFO">POST Request : url=https://gorest.co.in/public-api/users/1597/posts 
 path_url=/public-api/users/1597/posts 
 headers={'Content-Length': '96', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.25.1', 'Connection': 'keep-alive', 'Content-Type': u'application/json', 'Authorization': u'Bearer 665fd15c1722a9f7732368773d29bcc20fa78f5c4e0a27eb9d3037f56ad5ce76'} 
 body={"body": "Test inputting message in Post body", "title": "Test inputting message in Post title"} 
 </msg>
<msg timestamp="20210403 22:03:19.611" level="INFO">POST Response : url=https://gorest.co.in/public-api/users/1597/posts 
 status=200, reason=OK 
 headers={'Expect-CT': 'enforce; max-age=3600', 'X-Request-Id': 'e4b843e9-7934-408f-94ae-70753d90ed39', 'X-XSS-Protection': '1; mode=block', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip', 'Transfer-Encoding': 'chunked', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains', 'Vary': 'Accept-Encoding, Origin', 'X-Runtime': '0.010207', 'Server': 'nginx', 'Connection': 'keep-alive', 'ETag': 'W/"ae09ce4e5c6332b9b66f2356b1d7f8b3"', 'X-Permitted-Cross-Domain-Policies': 'none', 'Cache-Control': 'max-age=0, private, must-revalidate', 'Date': 'Sat, 03 Apr 2021 15:03:19 GMT', 'X-Frame-Options': 'SAMEORIGIN, sameorigin', 'Referrer-Policy': 'strict-origin-when-cross-origin', 'Content-Type': 'application/json; charset=utf-8', 'Location': 'https://gorest.co.in/public-api/posts/1281'} 
 body={"code":201,"meta":null,"data":{"id":1281,"user_id":1597,"title":"Test inputting message in Post title","body":"Test inputting message in Post body","created_at":"2021-04-03T20:33:19.703+05:30","updated_at":"2021-04-03T20:33:19.703+05:30"}} 
 </msg>
<msg timestamp="20210403 22:03:19.612" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210403 22:03:19.612" starttime="20210403 22:03:19.416"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resp.status_code} == 200</arg>
<arg>Set Global Variable</arg>
<arg>${json_resp}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${json_resp}</arg>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.615" level="INFO">${json_resp} = {u'data': {u'body': u'Test inputting message in Post body', u'user_id': 1597, u'title': u'Test inputting message in Post title', u'created_at': u'2021-04-03T20:33:19.703+05:30', u'updated_at': u'2021-...</msg>
<status status="PASS" endtime="20210403 22:03:19.615" starttime="20210403 22:03:19.613"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:19.615" starttime="20210403 22:03:19.612"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.616" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210403 22:03:19.616" starttime="20210403 22:03:19.615"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_resp}</arg>
<arg>$..id</arg>
</arguments>
<assign>
<var>${postInfo['id']}</var>
</assign>
<msg timestamp="20210403 22:03:19.652" level="INFO">${postInfo['id']} = [1281]</msg>
<status status="PASS" endtime="20210403 22:03:19.653" starttime="20210403 22:03:19.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${postInfo['id']}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.653" level="INFO">[1281]</msg>
<status status="PASS" endtime="20210403 22:03:19.653" starttime="20210403 22:03:19.653"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${postInfo['id']}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${post_id}</var>
</assign>
<msg timestamp="20210403 22:03:19.654" level="INFO">${post_id} = 1281</msg>
<status status="PASS" endtime="20210403 22:03:19.654" starttime="20210403 22:03:19.653"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${postID}</arg>
<arg>${post_id}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.655" level="INFO">${postID} = 1281</msg>
<status status="PASS" endtime="20210403 22:03:19.655" starttime="20210403 22:03:19.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${postID}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.655" level="INFO">1281</msg>
<status status="PASS" endtime="20210403 22:03:19.655" starttime="20210403 22:03:19.655"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_resp}</arg>
<arg>$..body</arg>
</arguments>
<assign>
<var>${postInfo['body']}</var>
</assign>
<msg timestamp="20210403 22:03:19.689" level="INFO">${postInfo['body']} = [u'Test inputting message in Post body']</msg>
<status status="PASS" endtime="20210403 22:03:19.689" starttime="20210403 22:03:19.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${postInfo['body']}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.689" level="INFO">[u'Test inputting message in Post body']</msg>
<status status="PASS" endtime="20210403 22:03:19.690" starttime="20210403 22:03:19.689"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${postInfo['body']}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${post_body}</var>
</assign>
<msg timestamp="20210403 22:03:19.690" level="INFO">${post_body} = Test inputting message in Post body</msg>
<status status="PASS" endtime="20210403 22:03:19.690" starttime="20210403 22:03:19.690"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${postBODY}</arg>
<arg>${post_body}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.691" level="INFO">${postBODY} = Test inputting message in Post body</msg>
<status status="PASS" endtime="20210403 22:03:19.691" starttime="20210403 22:03:19.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${postBODY}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.691" level="INFO">Test inputting message in Post body</msg>
<status status="PASS" endtime="20210403 22:03:19.691" starttime="20210403 22:03:19.691"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_resp}</arg>
<arg>$..title</arg>
</arguments>
<assign>
<var>${postInfo['title']}</var>
</assign>
<msg timestamp="20210403 22:03:19.727" level="INFO">${postInfo['title']} = [u'Test inputting message in Post title']</msg>
<status status="PASS" endtime="20210403 22:03:19.727" starttime="20210403 22:03:19.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${postInfo['title']}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.727" level="INFO">[u'Test inputting message in Post title']</msg>
<status status="PASS" endtime="20210403 22:03:19.727" starttime="20210403 22:03:19.727"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${postInfo['title']}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${post_title}</var>
</assign>
<msg timestamp="20210403 22:03:19.728" level="INFO">${post_title} = Test inputting message in Post title</msg>
<status status="PASS" endtime="20210403 22:03:19.728" starttime="20210403 22:03:19.727"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${postTITLE}</arg>
<arg>${post_title}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.728" level="INFO">${postTITLE} = Test inputting message in Post title</msg>
<status status="PASS" endtime="20210403 22:03:19.728" starttime="20210403 22:03:19.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${postTITLE}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.729" level="INFO">Test inputting message in Post title</msg>
<status status="PASS" endtime="20210403 22:03:19.729" starttime="20210403 22:03:19.729"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:19.729" starttime="20210403 22:03:19.414"></status>
</kw>
<kw name="And Http Response Should Be '200'" library="common_keywords">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20210403 22:03:19.731" level="INFO">${status} = 200</msg>
<status status="PASS" endtime="20210403 22:03:19.731" starttime="20210403 22:03:19.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.731" level="INFO">{"code":201,"meta":null,"data":{"id":1281,"user_id":1597,"title":"Test inputting message in Post title","body":"Test inputting message in Post body","created_at":"2021-04-03T20:33:19.703+05:30","updated_at":"2021-04-03T20:33:19.703+05:30"}}</msg>
<status status="PASS" endtime="20210403 22:03:19.731" starttime="20210403 22:03:19.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${status}</arg>
<arg>${http_status}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.732" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210403 22:03:19.732" starttime="20210403 22:03:19.732"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:19.732" starttime="20210403 22:03:19.730"></status>
</kw>
<kw name="And Response Field 'user_id' Should Be Equal '${user_id}'" library="common_keywords">
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${response.text}</arg>
</arguments>
<assign>
<var>${response.json}</var>
</assign>
<msg timestamp="20210403 22:03:19.734" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210403 22:03:19.734" level="INFO">To JSON using : content={"code":201,"meta":null,"data":{"id":1281,"user_id":1597,"title":"Test inputting message in Post title","body":"Test inputting message in Post body","created_at":"2021-04-03T20:33:19.703+05:30","updated_at":"2021-04-03T20:33:19.703+05:30"}} </msg>
<msg timestamp="20210403 22:03:19.735" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20210403 22:03:19.735" level="INFO">${response.json} = {u'data': {u'body': u'Test inputting message in Post body', u'user_id': 1597, u'title': u'Test inputting message in Post title', u'created_at': u'2021-04-03T20:33:19.703+05:30', u'updated_at': u'2021-...</msg>
<status status="PASS" endtime="20210403 22:03:19.735" starttime="20210403 22:03:19.734"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json}</arg>
<arg>$..${json_path}</arg>
</arguments>
<assign>
<var>${actual}</var>
</assign>
<msg timestamp="20210403 22:03:19.772" level="INFO">${actual} = [1597]</msg>
<status status="PASS" endtime="20210403 22:03:19.773" starttime="20210403 22:03:19.735"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual[0]}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20210403 22:03:19.774" starttime="20210403 22:03:19.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual[0]}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.775" level="INFO">1597</msg>
<status status="PASS" endtime="20210403 22:03:19.775" starttime="20210403 22:03:19.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.776" level="INFO">1597</msg>
<status status="PASS" endtime="20210403 22:03:19.776" starttime="20210403 22:03:19.775"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:19.776" starttime="20210403 22:03:19.733"></status>
</kw>
<kw name="Prepare JSON file for Creating comment request data" library="create-post-with-comment">
<assign>
<var>${commentJSONBody}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=${user_name}</arg>
<arg>email=${user_email}</arg>
<arg>body=Test inputting message in Comment body</arg>
<arg>title=Test inputting message in Comment title</arg>
</arguments>
<assign>
<var>&amp;{comment_body}</var>
</assign>
<msg timestamp="20210403 22:03:19.777" level="INFO">&amp;{comment_body} = { name=CreateNewUser oA0 | email=test.create_data5la@15ce.com | body=Test inputting message in Comment body | title=Test inputting message in Comment title }</msg>
<status status="PASS" endtime="20210403 22:03:19.778" starttime="20210403 22:03:19.777"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${comment_body}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210403 22:03:19.778" starttime="20210403 22:03:19.778"></status>
</kw>
<msg timestamp="20210403 22:03:19.779" level="INFO">${commentJSONBody} = {u'name': u'CreateNewUser oA0', u'email': u'test.create_data5la@15ce.com', u'body': u'Test inputting message in Comment body', u'title': u'Test inputting message in Comment title'}</msg>
<status status="PASS" endtime="20210403 22:03:19.779" starttime="20210403 22:03:19.776"></status>
</kw>
<kw name="Then Call Create comment With JSON Body" library="create-post-with-comment">
<arguments>
<arg>${postID}</arg>
<arg>${commentJSONBody}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>post_create_comment</arg>
<arg>${exam_url}</arg>
<arg>disable_warnings=${1}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.780" level="INFO">Creating Session using : alias=post_create_comment, url=https://gorest.co.in/public-api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210403 22:03:19.781" starttime="20210403 22:03:19.780"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Bearer ${token}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20210403 22:03:19.782" level="INFO">&amp;{headers} = { Content-Type=application/json | Authorization=Bearer 665fd15c1722a9f7732368773d29bcc20fa78f5c4e0a27eb9d3037f56ad5ce76 }</msg>
<status status="PASS" endtime="20210403 22:03:19.782" starttime="20210403 22:03:19.781"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<arguments>
<arg>post_create_comment</arg>
<arg>${uri_post}/${postId}/comments</arg>
<arg>data=${jsonbody}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210403 22:03:19.782" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20210403 22:03:19.973" level="INFO">POST Request : url=https://gorest.co.in/public-api/posts/1281/comments 
 path_url=/public-api/posts/1281/comments 
 headers={'Content-Length': '172', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.25.1', 'Connection': 'keep-alive', 'Content-Type': u'application/json', 'Authorization': u'Bearer 665fd15c1722a9f7732368773d29bcc20fa78f5c4e0a27eb9d3037f56ad5ce76'} 
 body={"name": "CreateNewUser oA0", "email": "test.create_data5la@15ce.com", "body": "Test inputting message in Comment body", "title": "Test inputting message in Comment title"} 
 </msg>
<msg timestamp="20210403 22:03:19.973" level="INFO">POST Response : url=https://gorest.co.in/public-api/posts/1281/comments 
 status=200, reason=OK 
 headers={'Expect-CT': 'enforce; max-age=3600', 'X-Request-Id': 'e7bb910a-8cb1-4a1d-aa19-12d95d8b4c1a', 'X-XSS-Protection': '1; mode=block', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip', 'Transfer-Encoding': 'chunked', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains', 'Vary': 'Accept-Encoding, Origin', 'X-Runtime': '0.010101', 'Server': 'nginx', 'Connection': 'keep-alive', 'ETag': 'W/"12303c570124edce45e7701278074d2b"', 'X-Permitted-Cross-Domain-Policies': 'none', 'Cache-Control': 'max-age=0, private, must-revalidate', 'Date': 'Sat, 03 Apr 2021 15:03:20 GMT', 'X-Frame-Options': 'SAMEORIGIN, sameorigin', 'Referrer-Policy': 'strict-origin-when-cross-origin', 'Content-Type': 'application/json; charset=utf-8', 'Location': 'https://gorest.co.in/public-api/comments/1286'} 
 body={"code":201,"meta":null,"data":{"id":1286,"post_id":1281,"name":"CreateNewUser oA0","email":"test.create_data5la@15ce.com","body":"Test inputting message in Comment body","created_at":"2021-04-03T20:33:20.065+05:30","updated_at":"2021-04-03T20:33:20.065+05:30"}} 
 </msg>
<msg timestamp="20210403 22:03:19.973" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210403 22:03:19.973" starttime="20210403 22:03:19.782"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resp.status_code} == 200</arg>
<arg>Set Global Variable</arg>
<arg>${json_resp}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${json_resp}</arg>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.978" level="INFO">${json_resp} = {u'data': {u'body': u'Test inputting message in Comment body', u'name': u'CreateNewUser oA0', u'created_at': u'2021-04-03T20:33:20.065+05:30', u'updated_at': u'2021-04-03T20:33:20.065+05:30', u'id': 1...</msg>
<status status="PASS" endtime="20210403 22:03:19.978" starttime="20210403 22:03:19.976"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:19.978" starttime="20210403 22:03:19.974"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20210403 22:03:19.979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210403 22:03:19.979" starttime="20210403 22:03:19.979"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:19.980" starttime="20210403 22:03:19.779"></status>
</kw>
<kw name="And Response Field 'post_id' Should Be Equal '${postID}'" library="common_keywords">
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${response.text}</arg>
</arguments>
<assign>
<var>${response.json}</var>
</assign>
<msg timestamp="20210403 22:03:19.981" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210403 22:03:19.982" level="INFO">To JSON using : content={"code":201,"meta":null,"data":{"id":1286,"post_id":1281,"name":"CreateNewUser oA0","email":"test.create_data5la@15ce.com","body":"Test inputting message in Comment body","created_at":"2021-04-03T20:33:20.065+05:30","updated_at":"2021-04-03T20:33:20.065+05:30"}} </msg>
<msg timestamp="20210403 22:03:19.983" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20210403 22:03:19.983" level="INFO">${response.json} = {u'data': {u'body': u'Test inputting message in Comment body', u'name': u'CreateNewUser oA0', u'created_at': u'2021-04-03T20:33:20.065+05:30', u'updated_at': u'2021-04-03T20:33:20.065+05:30', u'id': 1...</msg>
<status status="PASS" endtime="20210403 22:03:19.983" starttime="20210403 22:03:19.981"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json}</arg>
<arg>$..${json_path}</arg>
</arguments>
<assign>
<var>${actual}</var>
</assign>
<msg timestamp="20210403 22:03:20.026" level="INFO">${actual} = [1281]</msg>
<status status="PASS" endtime="20210403 22:03:20.026" starttime="20210403 22:03:19.984"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual[0]}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20210403 22:03:20.027" starttime="20210403 22:03:20.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual[0]}</arg>
</arguments>
<msg timestamp="20210403 22:03:20.027" level="INFO">1281</msg>
<status status="PASS" endtime="20210403 22:03:20.027" starttime="20210403 22:03:20.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20210403 22:03:20.028" level="INFO">1281</msg>
<status status="PASS" endtime="20210403 22:03:20.029" starttime="20210403 22:03:20.028"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:20.029" starttime="20210403 22:03:19.981"></status>
</kw>
<kw name="And Response Field 'name' Should Be Equal '${user_name}'" library="common_keywords">
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${response.text}</arg>
</arguments>
<assign>
<var>${response.json}</var>
</assign>
<msg timestamp="20210403 22:03:20.030" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210403 22:03:20.031" level="INFO">To JSON using : content={"code":201,"meta":null,"data":{"id":1286,"post_id":1281,"name":"CreateNewUser oA0","email":"test.create_data5la@15ce.com","body":"Test inputting message in Comment body","created_at":"2021-04-03T20:33:20.065+05:30","updated_at":"2021-04-03T20:33:20.065+05:30"}} </msg>
<msg timestamp="20210403 22:03:20.031" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20210403 22:03:20.031" level="INFO">${response.json} = {u'data': {u'body': u'Test inputting message in Comment body', u'name': u'CreateNewUser oA0', u'created_at': u'2021-04-03T20:33:20.065+05:30', u'updated_at': u'2021-04-03T20:33:20.065+05:30', u'id': 1...</msg>
<status status="PASS" endtime="20210403 22:03:20.031" starttime="20210403 22:03:20.030"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json}</arg>
<arg>$..${json_path}</arg>
</arguments>
<assign>
<var>${actual}</var>
</assign>
<msg timestamp="20210403 22:03:20.074" level="INFO">${actual} = [u'CreateNewUser oA0']</msg>
<status status="PASS" endtime="20210403 22:03:20.074" starttime="20210403 22:03:20.031"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual[0]}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20210403 22:03:20.075" starttime="20210403 22:03:20.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual[0]}</arg>
</arguments>
<msg timestamp="20210403 22:03:20.076" level="INFO">CreateNewUser oA0</msg>
<status status="PASS" endtime="20210403 22:03:20.076" starttime="20210403 22:03:20.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20210403 22:03:20.077" level="INFO">CreateNewUser oA0</msg>
<status status="PASS" endtime="20210403 22:03:20.078" starttime="20210403 22:03:20.077"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:20.078" starttime="20210403 22:03:20.030"></status>
</kw>
<kw name="And Response Field 'email' Should Be Equal '${user_email}'" library="common_keywords">
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${response.text}</arg>
</arguments>
<assign>
<var>${response.json}</var>
</assign>
<msg timestamp="20210403 22:03:20.079" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210403 22:03:20.080" level="INFO">To JSON using : content={"code":201,"meta":null,"data":{"id":1286,"post_id":1281,"name":"CreateNewUser oA0","email":"test.create_data5la@15ce.com","body":"Test inputting message in Comment body","created_at":"2021-04-03T20:33:20.065+05:30","updated_at":"2021-04-03T20:33:20.065+05:30"}} </msg>
<msg timestamp="20210403 22:03:20.080" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20210403 22:03:20.080" level="INFO">${response.json} = {u'data': {u'body': u'Test inputting message in Comment body', u'name': u'CreateNewUser oA0', u'created_at': u'2021-04-03T20:33:20.065+05:30', u'updated_at': u'2021-04-03T20:33:20.065+05:30', u'id': 1...</msg>
<status status="PASS" endtime="20210403 22:03:20.080" starttime="20210403 22:03:20.079"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json}</arg>
<arg>$..${json_path}</arg>
</arguments>
<assign>
<var>${actual}</var>
</assign>
<msg timestamp="20210403 22:03:20.119" level="INFO">${actual} = [u'test.create_data5la@15ce.com']</msg>
<status status="PASS" endtime="20210403 22:03:20.119" starttime="20210403 22:03:20.080"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual[0]}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20210403 22:03:20.119" starttime="20210403 22:03:20.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual[0]}</arg>
</arguments>
<msg timestamp="20210403 22:03:20.120" level="INFO">test.create_data5la@15ce.com</msg>
<status status="PASS" endtime="20210403 22:03:20.120" starttime="20210403 22:03:20.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20210403 22:03:20.120" level="INFO">test.create_data5la@15ce.com</msg>
<status status="PASS" endtime="20210403 22:03:20.121" starttime="20210403 22:03:20.120"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:20.121" starttime="20210403 22:03:20.078"></status>
</kw>
<kw name="And Response Field 'body' Should Be Contain 'Test inputting message in Comment body'" library="common_keywords">
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${response.text}</arg>
</arguments>
<assign>
<var>${response.json}</var>
</assign>
<msg timestamp="20210403 22:03:20.122" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210403 22:03:20.122" level="INFO">To JSON using : content={"code":201,"meta":null,"data":{"id":1286,"post_id":1281,"name":"CreateNewUser oA0","email":"test.create_data5la@15ce.com","body":"Test inputting message in Comment body","created_at":"2021-04-03T20:33:20.065+05:30","updated_at":"2021-04-03T20:33:20.065+05:30"}} </msg>
<msg timestamp="20210403 22:03:20.122" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20210403 22:03:20.123" level="INFO">${response.json} = {u'data': {u'body': u'Test inputting message in Comment body', u'name': u'CreateNewUser oA0', u'created_at': u'2021-04-03T20:33:20.065+05:30', u'updated_at': u'2021-04-03T20:33:20.065+05:30', u'id': 1...</msg>
<status status="PASS" endtime="20210403 22:03:20.123" starttime="20210403 22:03:20.122"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json}</arg>
<arg>$..${json_path}</arg>
</arguments>
<assign>
<var>${actual}</var>
</assign>
<msg timestamp="20210403 22:03:20.160" level="INFO">${actual} = [u'Test inputting message in Comment body']</msg>
<status status="PASS" endtime="20210403 22:03:20.160" starttime="20210403 22:03:20.123"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${actual[0]}</arg>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20210403 22:03:20.161" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20210403 22:03:20.161" starttime="20210403 22:03:20.161"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:20.161" starttime="20210403 22:03:20.121"></status>
</kw>
<kw name="Then Call delete the user With JSON Body" library="delete-user">
<arguments>
<arg>${user_id}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>delete_the_user</arg>
<arg>${exam_url}</arg>
<arg>disable_warnings=${1}</arg>
</arguments>
<msg timestamp="20210403 22:03:20.162" level="INFO">Creating Session using : alias=delete_the_user, url=https://gorest.co.in/public-api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210403 22:03:20.163" starttime="20210403 22:03:20.162"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Bearer ${token}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20210403 22:03:20.164" level="INFO">&amp;{headers} = { Content-Type=application/json | Authorization=Bearer 665fd15c1722a9f7732368773d29bcc20fa78f5c4e0a27eb9d3037f56ad5ce76 }</msg>
<status status="PASS" endtime="20210403 22:03:20.164" starttime="20210403 22:03:20.163"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>*DEPRECATED* Please use `DELETE On Session` instead.</doc>
<arguments>
<arg>delete_the_user</arg>
<arg>${uri}/${userId}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210403 22:03:20.164" level="WARN">Keyword 'RequestsLibrary.Delete Request' is deprecated. Please use `DELETE On Session` instead.</msg>
<msg timestamp="20210403 22:03:20.364" level="INFO">DELETE Request : url=https://gorest.co.in/public-api/users/1597 
 path_url=/public-api/users/1597 
 headers={'Content-Length': '0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.25.1', 'Connection': 'keep-alive', 'Content-Type': u'application/json', 'Authorization': u'Bearer 665fd15c1722a9f7732368773d29bcc20fa78f5c4e0a27eb9d3037f56ad5ce76'} 
 body=None 
 </msg>
<msg timestamp="20210403 22:03:20.364" level="INFO">DELETE Response : url=https://gorest.co.in/public-api/users/1597 
 status=200, reason=OK 
 headers={'Expect-CT': 'enforce; max-age=3600', 'X-Request-Id': '50df3a7e-f240-4a10-9ae5-923cd51fa81c', 'X-XSS-Protection': '1; mode=block', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip', 'Transfer-Encoding': 'chunked', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains', 'Vary': 'Accept-Encoding, Origin', 'X-Runtime': '0.021964', 'Server': 'nginx', 'Connection': 'keep-alive', 'ETag': 'W/"9132bec7c413b5b015be1efe1c6efe72"', 'X-Permitted-Cross-Domain-Policies': 'none', 'Cache-Control': 'max-age=0, private, must-revalidate', 'Date': 'Sat, 03 Apr 2021 15:03:20 GMT', 'X-Frame-Options': 'SAMEORIGIN, sameorigin', 'Referrer-Policy': 'strict-origin-when-cross-origin', 'Content-Type': 'application/json; charset=utf-8'} 
 body={"code":204,"meta":null,"data":null} 
 </msg>
<msg timestamp="20210403 22:03:20.364" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210403 22:03:20.364" starttime="20210403 22:03:20.164"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resp.status_code} == 200</arg>
<arg>Set Global Variable</arg>
<arg>${json_resp}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${json_resp}</arg>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20210403 22:03:20.367" level="INFO">${json_resp} = {u'data': None, u'code': 204, u'meta': None}</msg>
<status status="PASS" endtime="20210403 22:03:20.367" starttime="20210403 22:03:20.366"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:20.368" starttime="20210403 22:03:20.365"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20210403 22:03:20.369" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210403 22:03:20.369" starttime="20210403 22:03:20.368"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:20.369" starttime="20210403 22:03:20.162"></status>
</kw>
<kw name="And Http Response Should Be '200'" library="common_keywords">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20210403 22:03:20.371" level="INFO">${status} = 200</msg>
<status status="PASS" endtime="20210403 22:03:20.371" starttime="20210403 22:03:20.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
</arguments>
<msg timestamp="20210403 22:03:20.372" level="INFO">{"code":204,"meta":null,"data":null}</msg>
<status status="PASS" endtime="20210403 22:03:20.372" starttime="20210403 22:03:20.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${status}</arg>
<arg>${http_status}</arg>
</arguments>
<msg timestamp="20210403 22:03:20.373" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210403 22:03:20.373" starttime="20210403 22:03:20.373"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:20.374" starttime="20210403 22:03:20.370"></status>
</kw>
<kw name="And Verify delete the user successfully" library="delete-user">
<arguments>
<arg>${user_id}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>get_search_user</arg>
<arg>${exam_url}</arg>
<arg>disable_warnings=${1}</arg>
</arguments>
<msg timestamp="20210403 22:03:20.375" level="INFO">Creating Session using : alias=get_search_user, url=https://gorest.co.in/public-api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210403 22:03:20.376" starttime="20210403 22:03:20.375"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Bearer ${token}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20210403 22:03:20.377" level="INFO">&amp;{headers} = { Content-Type=application/json | Authorization=Bearer 665fd15c1722a9f7732368773d29bcc20fa78f5c4e0a27eb9d3037f56ad5ce76 }</msg>
<status status="PASS" endtime="20210403 22:03:20.377" starttime="20210403 22:03:20.376"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>*DEPRECATED* Please use `GET On Session` instead.</doc>
<arguments>
<arg>get_search_user</arg>
<arg>${uri}/${user_id}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210403 22:03:20.377" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20210403 22:03:20.553" level="INFO">GET Request : url=https://gorest.co.in/public-api/users/1597 
 path_url=/public-api/users/1597 
 headers={'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.25.1', 'Connection': 'keep-alive', 'Content-Type': u'application/json', 'Authorization': u'Bearer 665fd15c1722a9f7732368773d29bcc20fa78f5c4e0a27eb9d3037f56ad5ce76'} 
 body=None 
 </msg>
<msg timestamp="20210403 22:03:20.553" level="INFO">GET Response : url=https://gorest.co.in/public-api/users/1597 
 status=200, reason=OK 
 headers={'Expect-CT': 'enforce; max-age=3600', 'X-Request-Id': 'cd8f6870-ba77-425f-83d2-e1380d3fd5a9', 'X-XSS-Protection': '1; mode=block', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip', 'Transfer-Encoding': 'chunked', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains', 'Vary': 'Accept-Encoding, Origin', 'X-Runtime': '0.002647', 'Server': 'nginx', 'Connection': 'keep-alive', 'ETag': 'W/"b654e1cd0d3be5d471e57be8f71a8543"', 'X-Permitted-Cross-Domain-Policies': 'none', 'Cache-Control': 'max-age=0, private, must-revalidate', 'Date': 'Sat, 03 Apr 2021 15:03:20 GMT', 'X-Frame-Options': 'SAMEORIGIN, sameorigin', 'Referrer-Policy': 'strict-origin-when-cross-origin', 'Content-Type': 'application/json; charset=utf-8'} 
 body={"code":404,"meta":null,"data":{"message":"Resource not found"}} 
 </msg>
<msg timestamp="20210403 22:03:20.554" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210403 22:03:20.554" starttime="20210403 22:03:20.377"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210403 22:03:20.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210403 22:03:20.555" starttime="20210403 22:03:20.554"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:20.556" starttime="20210403 22:03:20.374"></status>
</kw>
<kw name="And Response Field 'code' Should Be Equal '404'" library="common_keywords">
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${response.text}</arg>
</arguments>
<assign>
<var>${response.json}</var>
</assign>
<msg timestamp="20210403 22:03:20.558" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210403 22:03:20.559" level="INFO">To JSON using : content={"code":404,"meta":null,"data":{"message":"Resource not found"}} </msg>
<msg timestamp="20210403 22:03:20.560" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20210403 22:03:20.560" level="INFO">${response.json} = {u'data': {u'message': u'Resource not found'}, u'code': 404, u'meta': None}</msg>
<status status="PASS" endtime="20210403 22:03:20.560" starttime="20210403 22:03:20.558"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json}</arg>
<arg>$..${json_path}</arg>
</arguments>
<assign>
<var>${actual}</var>
</assign>
<msg timestamp="20210403 22:03:20.603" level="INFO">${actual} = [404]</msg>
<status status="PASS" endtime="20210403 22:03:20.603" starttime="20210403 22:03:20.561"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual[0]}</arg>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20210403 22:03:20.604" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210403 22:03:20.604" starttime="20210403 22:03:20.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual[0]}</arg>
</arguments>
<msg timestamp="20210403 22:03:20.605" level="INFO">404</msg>
<status status="PASS" endtime="20210403 22:03:20.605" starttime="20210403 22:03:20.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20210403 22:03:20.605" level="INFO">404</msg>
<status status="PASS" endtime="20210403 22:03:20.605" starttime="20210403 22:03:20.605"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:20.605" starttime="20210403 22:03:20.557"></status>
</kw>
<kw name="And Response Field 'message' Should Be Contain 'Resource not found'" library="common_keywords">
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${response.text}</arg>
</arguments>
<assign>
<var>${response.json}</var>
</assign>
<msg timestamp="20210403 22:03:20.606" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210403 22:03:20.607" level="INFO">To JSON using : content={"code":404,"meta":null,"data":{"message":"Resource not found"}} </msg>
<msg timestamp="20210403 22:03:20.607" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20210403 22:03:20.607" level="INFO">${response.json} = {u'data': {u'message': u'Resource not found'}, u'code': 404, u'meta': None}</msg>
<status status="PASS" endtime="20210403 22:03:20.607" starttime="20210403 22:03:20.606"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json}</arg>
<arg>$..${json_path}</arg>
</arguments>
<assign>
<var>${actual}</var>
</assign>
<msg timestamp="20210403 22:03:20.648" level="INFO">${actual} = [u'Resource not found']</msg>
<status status="PASS" endtime="20210403 22:03:20.648" starttime="20210403 22:03:20.607"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${actual[0]}</arg>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20210403 22:03:20.649" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20210403 22:03:20.649" starttime="20210403 22:03:20.648"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:20.649" starttime="20210403 22:03:20.606"></status>
</kw>
<status status="PASS" endtime="20210403 22:03:20.649" critical="yes" starttime="20210403 22:03:18.384"></status>
</test>
<status status="PASS" endtime="20210403 22:03:20.650" starttime="20210403 22:03:17.894"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="TestExam" pass="1">TestExam</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20210403 22:03:17.885" level="ERROR">Error in file '/Users/thipparatmayachiew/PycharmProjects/Exam_API/testcases/TestExam.robot': Invalid syntax in test case 'TC_O001': Setting '[Documentation]' used multiple times.</msg>
<msg timestamp="20210403 22:03:17.886" level="ERROR">Error in file '/Users/thipparatmayachiew/PycharmProjects/Exam_API/testcases/TestExam.robot': Invalid syntax in test case 'TC_O001': Setting '[Documentation]' used multiple times.</msg>
<msg timestamp="20210403 22:03:17.886" level="ERROR">Error in file '/Users/thipparatmayachiew/PycharmProjects/Exam_API/testcases/TestExam.robot': Invalid syntax in test case 'TC_O001': Setting '[Documentation]' used multiple times.</msg>
<msg timestamp="20210403 22:03:18.474" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20210403 22:03:18.812" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20210403 22:03:19.015" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210403 22:03:19.063" level="WARN">Keyword 'RequestsLibrary.Put Request' is deprecated. Please use `PUT On Session` instead.</msg>
<msg timestamp="20210403 22:03:19.272" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210403 22:03:19.315" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210403 22:03:19.364" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210403 22:03:19.416" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20210403 22:03:19.734" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210403 22:03:19.782" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20210403 22:03:19.981" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210403 22:03:20.030" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210403 22:03:20.079" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210403 22:03:20.122" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210403 22:03:20.164" level="WARN">Keyword 'RequestsLibrary.Delete Request' is deprecated. Please use `DELETE On Session` instead.</msg>
<msg timestamp="20210403 22:03:20.377" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20210403 22:03:20.558" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210403 22:03:20.606" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
</errors>
</robot>
